from uuid import uuid4
class Client(process):
	def setup(replicas:set, runner, num_requests):
		output('configured to send %d requests' % num_requests)
		pass
	
	def run():
		# TODO:
		# 1. client requests should be signed
		#		replicas verify signatures
		# 2. include unique id to avoid request duplication
		# 3. client should be able to determine when a submitted request
		#		has been submitted to the ledger
		output('started running')
		# send requests
		for i in range(num_requests):
			# TODO include signature
			# TODO uuid4 random seed?
			uuid = uuid4().hex
			command = str(self) + str(i)
			txn = (command, uuid)
			send(('request', txn), to=replicas)
			committed = False
			duration = 1
			while not committed:
				if await(received(('committed', txn))):
					committed = True
				elif timeout(duration):
					output('timed out requesting commit for txn:', txn)
					duration *= 2
		output('done sending commands')
		send(('done',), to=runner)
	
